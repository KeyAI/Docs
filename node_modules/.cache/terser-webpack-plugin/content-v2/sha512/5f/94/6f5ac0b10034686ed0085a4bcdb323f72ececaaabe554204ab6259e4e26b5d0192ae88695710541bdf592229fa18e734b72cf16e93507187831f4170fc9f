{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{355:function(s,a,t){\"use strict\";t.r(a);var n=t(43),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"_04-13\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_04-13\"}},[s._v(\"#\")]),s._v(\" 04-13\")]),s._v(\" \"),t(\"h2\",{attrs:{id:\"python-模块-module\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#python-模块-module\"}},[s._v(\"#\")]),s._v(\" Python 模块 Module\")]),s._v(\" \"),t(\"p\",[s._v(\"模块是一组 Python 代码的集合，可以使用其他模块，也可以被其他模块使用\")]),s._v(\" \"),t(\"p\",[s._v(\"为了编写可维护的代码，我们把很多函数分组，分别放到不同的文件里，这样，每个文件包含的代码就相对较少，很多编程语言都采用这种组织代码的方式。在 Python 中，一个.py文件就称之为一个模块（Module）\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"相同名字的函数和变量完全可以分别存在不同的模块中，因此在编写模块时，不必考虑名字会与其他模块冲突。但是也要注意，尽量不要与 Python 的内置函数名字冲突\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"为了避免模块名冲突，Python又引入了按目录来组织模块的方法，称为包（Package），每一个包目录下面都会有一个\"),t(\"code\",[s._v(\"__init__.py\")]),s._v(\"的文件，\"),t(\"code\",[s._v(\"__init__.py\")]),s._v(\"本身就是一个模块，而它的模块名就是包名\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"可以有多级目录，组成多级层次的包结构\")]),s._v(\" \"),t(\"div\",{staticClass:\"language- line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v(\"mycompany\\n ├─ web\\n │  ├─ __init__.py\\n │  ├─ utils.py\\n │  └─ www.py\\n ├─ __init__.py\\n ├─ abc.py\\n └─ utils.py\\n # 文件 www.py 的模块名就是 mycompany.web.www，两个文件 utils.py 的模块名分别是 mycompany.utils 和 mycompany.web.utils\\n \\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\")])])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"模块名不要和系统模块名冲突\")])])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"使用模块\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用模块\"}},[s._v(\"#\")]),s._v(\" 使用模块\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-python line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"#!/usr/bin/env python3\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# -*- coding: utf-8 -*-\")]),s._v(\"\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"' a test module '\")]),s._v(\"    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 任何模块代码的第一个字符串都被视为模块的文档注释\")]),s._v(\"\\n\\n__author__ \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'Michael Liao'\")]),s._v(\"  \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 作者\")]),s._v(\"\\n\\ncode\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\")])]),t(\"ul\",[t(\"li\",[t(\"div\",{staticClass:\"language-python line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"import\")]),s._v(\" sys\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"p\",[s._v(\"导入\"),t(\"code\",[s._v(\"sys\")]),s._v(\"模块后，我们就有了变量\"),t(\"code\",[s._v(\"sys\")]),s._v(\"指向该模块，利用\"),t(\"code\",[s._v(\"sys\")]),s._v(\"这个变量，就可以访问\"),t(\"code\",[s._v(\"sys\")]),s._v(\"模块的所有功能\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"当我们在命令行运行\"),t(\"code\",[s._v(\"hello\")]),s._v(\"模块文件时，Python 解释器把一个特殊变量\"),t(\"code\",[s._v(\"__name__\")]),s._v(\"置为\"),t(\"code\",[s._v(\"__main__\")]),s._v(\"，因此，加上相应判断可以让一个模块通过命令行运行时执行一些额外的代码，最常见的就是运行测试。\")])])]),s._v(\" \"),t(\"h4\",{attrs:{id:\"作用域\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#作用域\"}},[s._v(\"#\")]),s._v(\" 作用域\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"正常的函数和变量名是公开的（public），可以被直接引用，比如：\"),t(\"code\",[s._v(\"abc\")]),s._v(\"，\"),t(\"code\",[s._v(\"x123\")]),s._v(\"，\"),t(\"code\",[s._v(\"PI\")]),s._v(\"等\")]),s._v(\" \"),t(\"li\",[s._v(\"类似\"),t(\"code\",[s._v(\"__xxx__\")]),s._v(\"这样的变量是特殊变量，可以被直接引用，但是有特殊用途\")]),s._v(\" \"),t(\"li\",[s._v(\"类似\"),t(\"code\",[s._v(\"_xxx\")]),s._v(\"和\"),t(\"code\",[s._v(\"__xxx\")]),s._v(\"这样的函数或变量就是非公开的（private），\"),t(\"strong\",[s._v(\"不应该\")]),s._v(\"（而非不能）被直接引用，比如\"),t(\"code\",[s._v(\"_abc\")]),s._v(\"，\"),t(\"code\",[s._v(\"__abc\")]),s._v(\"等\")]),s._v(\" \"),t(\"li\",[s._v(\"通常，外部不需要引用的函数全部定义成 private，只有外部需要引用的函数才定义为 public，把内部逻辑用private函数隐藏起来，这是一种非常有用的代码封装和抽象的方法\")])])])}),[],!1,null,null,null);a.default=e.exports}}]);","extractedComments":[]}