{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{365:function(s,t,a){\"use strict\";a.r(t);var n=a(43),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"_04-11\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_04-11\"}},[s._v(\"#\")]),s._v(\" 04-11\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"python-高级特性\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#python-高级特性\"}},[s._v(\"#\")]),s._v(\" Python 高级特性\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"切片（slice）\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#切片（slice）\"}},[s._v(\"#\")]),s._v(\" 切片（Slice）\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" L \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'Michael'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'Sarah'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'Tracy'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'Bob'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'Jack'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\")])]),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" L\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'Michael'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'Sarah'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'Tracy'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])]),a(\"p\",[a(\"code\",[s._v(\"L[0:3]\")]),s._v(\"表示，从索引\"),a(\"code\",[s._v(\"0\")]),s._v(\"开始取，直到索引\"),a(\"code\",[s._v(\"3\")]),s._v(\"为止，但不包括索引\"),a(\"code\",[s._v(\"3\")]),s._v(\"。即索引\"),a(\"code\",[s._v(\"0\")]),s._v(\"，\"),a(\"code\",[s._v(\"1\")]),s._v(\"，\"),a(\"code\",[s._v(\"2\")]),s._v(\"，正好是3个元素\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[s._v(\"如果第一个索引是\"),a(\"code\",[s._v(\"0\")]),s._v(\"，可以省略：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" L\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'Michael'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'Sarah'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'Tracy'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"倒数切片：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" L\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'Bob'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'Jack'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" L\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'Bob'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"每两个取一个：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" L\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"8\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"tuple 也是一种 list ，唯一区别是 tuple 不可变。因此，tuple 也可以用切片操作，只是操作的结果仍是 tuple\")])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"字符串\"),a(\"code\",[s._v(\"'xxx'\")]),s._v(\"也可以看成是一种 list，每个元素就是一个字符。因此，字符串也可以用切片操作，只是操作结果仍是字符串：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'ABCDEFG'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'ABC'\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'ABCDEFG'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'ACEG'\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\")])])])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"迭代（iteration）\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#迭代（iteration）\"}},[s._v(\"#\")]),s._v(\" 迭代（Iteration）\")]),s._v(\" \"),a(\"p\",[s._v(\"在 Python 中，迭代是通过\"),a(\"code\",[s._v(\"for ... in\")]),s._v(\"来完成的，Python 的\"),a(\"code\",[s._v(\"for\")]),s._v(\"循环抽象程度要高于C的\"),a(\"code\",[s._v(\"for\")]),s._v(\"循环，因为 Python 的\"),a(\"code\",[s._v(\"for\")]),s._v(\"循环不仅可以用在 list 或 tuple 上，还可以作用在其他可迭代对象上\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[s._v(\"默认情况下，dict 迭代的是key。如果要迭代 value，可以用\"),a(\"code\",[s._v(\"for value in d.values()\")]),s._v(\"，如果要同时迭代 key 和 value，可以用\"),a(\"code\",[s._v(\"for k, v in d.items()\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"通过 collections 模块的 Iterable 类型判断对象是否可迭代：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"from\")]),s._v(\" collections\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"abs\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"import\")]),s._v(\" Iterable\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"isinstance\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'abc'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" Iterable\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# str 是否可迭代\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"True\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"isinstance\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" Iterable\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# list 是否可迭代\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"True\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"isinstance\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"123\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" Iterable\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 整数是否可迭代\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"False\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[a(\"code\",[s._v(\"enumerate\")]),s._v(\"函数可以把一个 list 变成索引-元素对，这样就可以在\"),a(\"code\",[s._v(\"for\")]),s._v(\"循环中同时迭代索引和元素本身：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" i\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" value \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"in\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"enumerate\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'A'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'B'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'C'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"     \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"print\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"i\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" value\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\" A\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\" B\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\" C\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\")])])])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"列表生成式（list-comprehensions）\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#列表生成式（list-comprehensions）\"}},[s._v(\"#\")]),s._v(\" 列表生成式（List Comprehensions）\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"x \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" x \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" x \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"in\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"range\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"11\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"9\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"16\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"25\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"36\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"49\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"64\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"81\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"100\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])]),a(\"ul\",[a(\"li\",[a(\"p\",[s._v(\"for 循环后面还可以加上 if 判断：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"x \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" x \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" x \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"in\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"range\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"11\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" x \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"%\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"16\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"36\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"64\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"100\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"还可以使用两层循环，生成全排列：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"m \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" n \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" m \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"in\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'ABC'\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" n \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"in\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'XYZ'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'AX'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'AY'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'AZ'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'BX'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'BY'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'BZ'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'CX'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'CY'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'CZ'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"列表生成式也可以使用两个变量来生成list：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" d \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'x'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'A'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'y'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'B'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'z'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'C'\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"k \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'='\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" v \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" k\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" v \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"in\")]),s._v(\" d\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"items\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'y=B'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'x=A'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'z=C'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\")])])])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"生成器（generator）\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#生成器（generator）\"}},[s._v(\"#\")]),s._v(\" 生成器（Generator）\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[s._v(\"创建 generator 的第一种方法：只要把一个列表生成式的\"),a(\"code\",[s._v(\"[]\")]),s._v(\"改成\"),a(\"code\",[s._v(\"()\")]),s._v(\"，就创建了一个 generator。可以通过\"),a(\"code\",[s._v(\"next()\")]),s._v(\"函数获得 generator 的下一个返回值。generator 保存的是算法，每次调用\"),a(\"code\",[s._v(\"next(g)\")]),s._v(\"，就计算出\"),a(\"code\",[s._v(\"g\")]),s._v(\"的下一个元素的值，直到计算到最后一个元素，没有更多的元素时，抛出\"),a(\"code\",[s._v(\"StopIteration\")]),s._v(\"的错误\")])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"通过\"),a(\"code\",[s._v(\"for\")]),s._v(\"循环迭代（不需要关心\"),a(\"code\",[s._v(\"StopIteration\")]),s._v(\"的错误）：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" g \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"x \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" x \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" x \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"in\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"range\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" n \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"in\")]),s._v(\" g\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"     \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"print\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\" \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"9\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"16\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"如果推算的算法比较复杂，用类似列表生成式的\"),a(\"code\",[s._v(\"for\")]),s._v(\"循环无法实现的时候，还可以用函数来实现：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"def\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"fib\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"max\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n    n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" b \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"while\")]),s._v(\" n \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"max\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"yield\")]),s._v(\" b\\n        a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" b \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" b\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" b \\n        n \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" n \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'done'\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# a, b = b, a + b\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 相当于：\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# t = (b, a + b) # t是一个tuple\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# a = t[0]\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# b = t[1]\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"如果一个函数定义中包含\"),a(\"code\",[s._v(\"yield\")]),s._v(\"关键字，那么这个函数就不再是一个普通函数，而是一个 generator、\")])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"generator 和函数的执行流程不一样。函数是顺序执行，遇到\"),a(\"code\",[s._v(\"return\")]),s._v(\"语句或者最后一行函数语句就返回。而变成generator 的函数，在每次调用\"),a(\"code\",[s._v(\"next()\")]),s._v(\"的时候执行，遇到\"),a(\"code\",[s._v(\"yield\")]),s._v(\"语句返回，再次执行时从上次返回的\"),a(\"code\",[s._v(\"yield\")]),s._v(\"语句处继续执行\")])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"用\"),a(\"code\",[s._v(\"for\")]),s._v(\"循环调用generator时，拿不到 generator 的\"),a(\"code\",[s._v(\"return\")]),s._v(\"语句的返回值。如果想要拿到返回值，必须捕获\"),a(\"code\",[s._v(\"StopIteration\")]),s._v(\"错误，返回值包含在\"),a(\"code\",[s._v(\"StopIteration\")]),s._v(\"的\"),a(\"code\",[s._v(\"value\")]),s._v(\"中：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" g \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" fib\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"while\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"True\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"     \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"try\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"         x \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"next\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"g\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"         \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"print\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'g:'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" x\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"     \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"except\")]),s._v(\" StopIteration \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"as\")]),s._v(\" e\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"         \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"print\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'Generator return value:'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" e\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"value\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"         \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"break\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\ng\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\ng\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\ng\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"\\ng\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),s._v(\"\\ng\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),s._v(\"\\ng\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"8\")]),s._v(\"\\nGenerator \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" value\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" done\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\")])])])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"迭代器（iterator）\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#迭代器（iterator）\"}},[s._v(\"#\")]),s._v(\" 迭代器（Iterator）\")]),s._v(\" \"),a(\"p\",[s._v(\"可以被\"),a(\"code\",[s._v(\"next()\")]),s._v(\"函数调用并不断返回下一个值的对象称为迭代器：\"),a(\"code\",[s._v(\"Iterator\")])]),s._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[s._v(\"可以使用\"),a(\"code\",[s._v(\"isinstance()\")]),s._v(\"判断一个对象是否是\"),a(\"code\",[s._v(\"Iterator\")]),s._v(\"对象：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"from\")]),s._v(\" collections\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"abc \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"import\")]),s._v(\" Iterator\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"isinstance\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"x \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" x \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"in\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"range\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" Iterator\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"True\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"isinstance\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" Iterator\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"False\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"isinstance\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" Iterator\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"False\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"isinstance\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'abc'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" Iterator\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"False\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"把\"),a(\"code\",[s._v(\"list\")]),s._v(\"、\"),a(\"code\",[s._v(\"dict\")]),s._v(\"、\"),a(\"code\",[s._v(\"str\")]),s._v(\"等\"),a(\"code\",[s._v(\"Iterable\")]),s._v(\"变成\"),a(\"code\",[s._v(\"Iterator\")]),s._v(\"可以使用\"),a(\"code\",[s._v(\"iter()\")]),s._v(\"函数：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"isinstance\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"iter\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" Iterator\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"True\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">>\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"isinstance\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"iter\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'abc'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" Iterator\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"True\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\")])])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"Python 的\"),a(\"code\",[s._v(\"Iterator\")]),s._v(\"对象表示的是一个数据流，Iterator 对象可以被\"),a(\"code\",[s._v(\"next()\")]),s._v(\"函数调用并不断返回下一个数据，直到没有数据时抛出\"),a(\"code\",[s._v(\"StopIteration\")]),s._v(\"错误。可以把这个数据流看做是一个有序序列，但我们却不能提前知道序列的长度，只能不断通过\"),a(\"code\",[s._v(\"next()\")]),s._v(\"函数实现按需计算下一个数据，所以\"),a(\"code\",[s._v(\"Iterator\")]),s._v(\"的计算是惰性的，只有在需要返回下一个数据时它才会计算\")])]),s._v(\" \"),a(\"li\",[a(\"p\",[s._v(\"Python 的\"),a(\"code\",[s._v(\"for\")]),s._v(\"循环本质上就是通过不断调用\"),a(\"code\",[s._v(\"next()\")]),s._v(\"函数实现的，例如：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" x \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"in\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"pass\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])]),a(\"p\",[s._v(\"实际上完全等价于：\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-python line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 首先获得Iterator对象:\")]),s._v(\"\\nit \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"iter\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 循环:\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"while\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"True\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"try\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 获得下一个值:\")]),s._v(\"\\n        x \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[s._v(\"next\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"it\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"except\")]),s._v(\" StopIteration\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 遇到StopIteration就退出循环\")]),s._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"break\")]),s._v(\"\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);","extractedComments":[]}