{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{392:function(t,v,_){\"use strict\";_.r(v);var e=_(42),s=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[_(\"h1\",{attrs:{id:\"git\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git\"}},[t._v(\"#\")]),t._v(\" Git\")]),t._v(\" \"),_(\"h2\",{attrs:{id:\"常用命令\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#常用命令\"}},[t._v(\"#\")]),t._v(\" 常用命令\")]),t._v(\" \"),_(\"table\",[_(\"thead\",[_(\"tr\",[_(\"th\",[_(\"strong\",[t._v(\"命令\")])]),t._v(\" \"),_(\"th\",[_(\"strong\",[t._v(\"功能\")])])])]),t._v(\" \"),_(\"tbody\",[_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git add [文件名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"跟踪此文件，即把文件添加到暂存区\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git add .\")])]),t._v(\" \"),_(\"td\",[t._v(\"将已修改文件全部添加到暂存区\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git status\")])]),t._v(\" \"),_(\"td\",[t._v(\"查看整个仓库的状态\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git diff\")])]),t._v(\" \"),_(\"td\",[t._v(\"查看工作区被跟踪的文件的修改详情\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git diff --cached\")])]),t._v(\" \"),_(\"td\",[t._v(\"查看暂存区的全部修改\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git reset -- [文件名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"撤销暂存区此文件的修改\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git rm --cached [文件名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"撤销暂存区此文件的修改\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git reset --\")])]),t._v(\" \"),_(\"td\",[t._v(\"把暂存区的全部修改撤销\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git commit -m [备注]\")])]),t._v(\" \"),_(\"td\",[t._v(\"生成一个新的提交，一个必须的选项 \"),_(\"code\",[t._v(\"-m\")]),t._v(\" 用来提供该提交的备注\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git reset --soft/hard HEAD^\")])]),t._v(\" \"),_(\"td\",[t._v(\"撤销最近的一次提交，撤销 n 次可以简写为 \"),_(\"code\",[t._v(\"HEAD~n\")])])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git reset --hard [版本号]\")])]),t._v(\" \"),_(\"td\",[t._v(\"回退到某一版本\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git log [分支名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"查看某分支的提交历史，分支名缺省查看当前所在分支\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git log --oneline\")])]),t._v(\" \"),_(\"td\",[t._v(\"一行显示提交历史\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git log -n\")])]),t._v(\" \"),_(\"td\",[t._v(\"查看最近 n 个提交\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git log --author [贡献者名字]\")])]),t._v(\" \"),_(\"td\",[t._v(\"查看指定贡献者的提交记录\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git log --graph\")])]),t._v(\" \"),_(\"td\",[t._v(\"图示法显示提交历史\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git config -l\")])]),t._v(\" \"),_(\"td\",[t._v(\"查看配置信息\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git config --global alias.[别名] [原命令]\")])]),t._v(\" \"),_(\"td\",[t._v(\"为 Git 命令设置别名，如果原命令中有选项，需要加引号\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"strong\",[t._v(\"远程\")])]),t._v(\" \"),_(\"td\")]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git clone + [仓库地址]\")])]),t._v(\" \"),_(\"td\",[t._v(\"标准克隆仓库命令\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git remote -v\")])]),t._v(\" \"),_(\"td\",[t._v(\"查看本地仓库所关联的远程仓库信息\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git push\")])]),t._v(\" \"),_(\"td\",[t._v(\"将本地新增的提交推送到远程仓库中\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git push -f\")])]),t._v(\" \"),_(\"td\",[t._v(\"强制推送\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git pull\")])]),t._v(\" \"),_(\"td\",[t._v(\"拉取远程分支到本地\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git fetch\")])]),t._v(\" \"),_(\"td\",[t._v(\"将远程仓库的分支信息拉取到本地仓库\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"strong\",[t._v(\"分支\")])]),t._v(\" \"),_(\"td\")]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git branch -avv\")])]),t._v(\" \"),_(\"td\",[t._v(\"查看全部分支信息\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git reflog\")])]),t._v(\" \"),_(\"td\",[t._v(\"本地仓库所有分支的每一次版本变化记录\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git rebase origin/master\")])]),t._v(\" \"),_(\"td\",[t._v(\"使本地 master 分支基于远程仓库的 master 分支\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git branch [分支名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"创建新的分支\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git checkout [分支名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"切换分支\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git checkout -b [分支名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"创建分支并切换到新分支\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git push [主机名] [本地分支名]:[远程分支名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"将本地分支推送到远程仓库的分支中，如果分支名是相同的，可以省略 \"),_(\"code\",[t._v(\":[远程分支名]\")])])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git branch -u [主机名/远程分支名] [本地分支名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"将本地分支与远程分支关联（使本地分支跟踪远程分支）\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git branch --unset-upstream [分支名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"撤销该分支对远程分支的跟踪\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git branch -D [分支名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"删除本地分支\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git push [主机名] :[远程分支名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"删除远程分支\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git push [主机名] --delete [远程分支名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"删除远程分支\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git branch -m [原分支名] [新分支名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"给本地分支改名\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git remote add [主机名] [主仓库的地址]\")])]),t._v(\" \"),_(\"td\",[t._v(\"增加一个关联主机\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git pull --rebase [主机名] [远程分支名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"同步主仓库\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git fetch [主机名]\")]),t._v(\"->\"),_(\"code\",[t._v(\"git rebase [主机名/远程分支名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"同步主仓库\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"strong\",[t._v(\"标签\")])]),t._v(\" \"),_(\"td\",[t._v(\"标签基于某次提交\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git tag\")])]),t._v(\" \"),_(\"td\",[t._v(\"显示仓库中的全部标签列表\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git tag [标签名] -m [备注信息] [提交版本号]\")])]),t._v(\" \"),_(\"td\",[t._v(\"创建标签\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git tag -d [标签名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"删除本地标签\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git show [标签名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"查看标签详情\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git push origin [标签名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"推送标签到远程仓库\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git push origin --tags\")])]),t._v(\" \"),_(\"td\",[t._v(\"将全部本地标签推送至远程仓库\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git push origin :refs/tags/[标签名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"删除远程仓库的标签\")])]),t._v(\" \"),_(\"tr\",[_(\"td\",[_(\"code\",[t._v(\"git checkout [标签名]\")])]),t._v(\" \"),_(\"td\",[t._v(\"切换到某个标签的提交版本\")])])])]),t._v(\" \"),_(\"h2\",{attrs:{id:\"rebase-相关\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#rebase-相关\"}},[t._v(\"#\")]),t._v(\" Rebase 相关\")]),t._v(\" \"),_(\"p\",[t._v(\"Rebase 变基，是将提交到某一分支上的所有修改都移至另一分支上。变基操作的实质是丢弃一些现有的提交，然后相应地新建一些内容一样但实际上不同的提交在对应分支上。\")]),t._v(\" \"),_(\"h3\",{attrs:{id:\"通常使用方式\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#通常使用方式\"}},[t._v(\"#\")]),t._v(\" 通常使用方式\")]),t._v(\" \"),_(\"ol\",[_(\"li\",[_(\"p\",[t._v(\"切换到主分支（需要 push 到的远程分支对应的本地分支），并拉取最新分支状态；然后切换回待 push 的本地开发分支。\")]),t._v(\" \"),_(\"div\",{staticClass:\"language-bash line-numbers-mode\"},[_(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[_(\"code\",[_(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" checkout master\\n\"),_(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" pull --rebase\\n\"),_(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" checkout \"),_(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[t._v(\"local\")]),t._v(\"\\n\\n// 注：\\n// \"),_(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" pull \"),_(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),_(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" fetch + \"),_(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" merge\\n// \"),_(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" pull --rebase \"),_(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),_(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" fetch + \"),_(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" rebase\\n\")])]),t._v(\" \"),_(\"div\",{staticClass:\"line-numbers-wrapper\"},[_(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),_(\"br\"),_(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),_(\"br\"),_(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),_(\"br\"),_(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),_(\"br\"),_(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),_(\"br\"),_(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),_(\"br\"),_(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),_(\"br\")])])]),t._v(\" \"),_(\"li\",[_(\"p\",[t._v(\"合并本地提交\")]),t._v(\" \"),_(\"div\",{staticClass:\"language-bash line-numbers-mode\"},[_(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[_(\"code\",[_(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" rebase -i HEAD~2 //或 \"),_(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" rebase -i \"),_(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"startpoint\"),_(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"  \"),_(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"endpoint\"),_(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"\\n\")])]),t._v(\" \"),_(\"div\",{staticClass:\"line-numbers-wrapper\"},[_(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),_(\"br\")])]),_(\"ul\",[_(\"li\",[t._v(\"HEAD~2 表示合并最近的两个提交。\")]),t._v(\" \"),_(\"li\",[t._v(\"或用参数\"),_(\"code\",[t._v(\"[startpoint] [endpoint]\")]),t._v(\"指定一个编辑区间（前开后闭）代替 HEAD~n，[endpoint] 缺省值是当前分支 HEAD 所指向的 commit。\")])])]),t._v(\" \"),_(\"li\",[_(\"p\",[t._v(\"将当前分支 rebase 到主分支，过程中需要解决冲突。（若执行了第 2 步仅需解决一次冲突）\")]),t._v(\" \"),_(\"div\",{staticClass:\"language- line-numbers-mode\"},[_(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[_(\"code\",[t._v(\"git rebase master\\n若存在冲突，解决冲突并 git add .\\ngit rebase --continue\\n\\n// git rebase --abort 取消本次 rebase\\n\")])]),t._v(\" \"),_(\"div\",{staticClass:\"line-numbers-wrapper\"},[_(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),_(\"br\"),_(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),_(\"br\"),_(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),_(\"br\"),_(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),_(\"br\"),_(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),_(\"br\")])])]),t._v(\" \"),_(\"li\",[_(\"p\",[t._v(\"切换到主分支，并合并开发分支，push 到远程仓库。\")]),t._v(\" \"),_(\"div\",{staticClass:\"language- line-numbers-mode\"},[_(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[_(\"code\",[t._v(\"git checkout master\\ngit merge local\\ngit push\\n\")])]),t._v(\" \"),_(\"div\",{staticClass:\"line-numbers-wrapper\"},[_(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),_(\"br\"),_(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),_(\"br\"),_(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),_(\"br\")])])])])])}),[],!1,null,null,null);v.default=s.exports}}]);","extractedComments":[]}